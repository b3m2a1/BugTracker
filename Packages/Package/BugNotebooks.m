(* ::Package:: *)

(* Autogenerated Package *)

BugsNotebook::usage=
  "Creates a BugsNotebook";
BugsNotebookAdd::usage=
  "Adds a bug to a bugs notebook";
BugsNotebookLocate::usage=
  "Finds a bug in the bugs notebook";
BugsNotebookToBugs::usage=
  "Converts a bugs notebook to a list of bugs";
BugsNotebookToMarkdown::usage=
  "Converts a bugs notebook to Markdown";
BugsNotebookMarkdownSave::usage=
  "";
BugsToNotebook::usage="";


Begin["`Private`"];


(* ::Subsubsection::Closed:: *)
(*BugsSearchCell*)



BugsSearchCell[]:=
  Cell[
    TextData@{"Bug Tracker", "  ", 
      Cell[
        BoxData@ToBoxes@
          BugsNotebookSearchBar[],
        "Text",
        "BugSearchBar"
        ]
      },
    "Chapter",
    "BugsNotebookHeader"
    ]


(* ::Subsubsection::Closed:: *)
(*BugsViewBar*)



BugsViewBar[]:=
  Cell[
    TextData@
      {
        Cell[BoxData@ToBoxes@BugsNotebookViewListButton[], "Text"],
        Cell[BoxData@ToBoxes@BugsNotebookViewDatasetButton[], "Text"]
        },
    "Text",
    "BugsNotebookButtonBar"
    ]


(* ::Subsubsection::Closed:: *)
(*BugsNotebook*)



BugsNotebook[cells__, ops:OptionsPattern[]]:=
  Notebook[
    Flatten@{
      BugsSearchCell[],
      BugsViewBar[],
      cells
      },
    ops,
    StyleDefinitions->
      If[$PackageLoadingMode==="Dependency",
        PackageFilePath["FrontEnd", "Private", "BugTracker.nb"],
        PackageFEFile["Private", "BugTracker.nb"]
        ]
    ]


(* ::Subsubsection::Closed:: *)
(*BugsNotebookCell*)



(* ::Subsubsubsection::Closed:: *)
(*bugTitleCell*)



bugTitleCell[title_, resolved_, tag_]:=
  Cell[
    BoxData@
      GridBox[
        {
          {
            ItemBox[
              Cell[title, "Section", "BugTitle",
                CellFrame->None, StripOnInput->False],
              ItemSize->Scaled[0.8`],
              Alignment->Left,
              StripOnInput->False
              ],
          ItemBox[
            Cell[
              BoxData@
                TogglerBox[
                  With[{rr=StringLength@resolved>0},
                    Dynamic[
                      CurrentValue[
                        EvaluationCell[],
                        {TaggingRules, "Bugs", tag, "Resolved"},
                        rr
                        ]
                      ]
                    ],
                  {
                    True->"\[CheckmarkedBox]",
                    False->"\[EmptySquare]"
                    },
                  "\[CheckedBox]"
                  ],
              "BugResolved",
              Deployed->True,
              Deletable->False,
              Selectable->False
              ],
            ItemSize->Scaled[0.1`],
            Alignment->Right,StripOnInput->False]
          }
        },
        AutoDelete->False,
        GridBoxItemSize->{"Columns"->{{Automatic}},"Rows"->{{Automatic}}}
        ],
    "Section", "BugTitle", 
    CellTags->{"Bug", tag, "Title"}
    ]


(* ::Subsubsubsection::Closed:: *)
(*Main*)



Options[BugsNotebookCell]=
  {
    "Title"->Automatic,
    "ID"->Automatic,
    "CreationDate"->Automatic,
    "ResolutionDate"->Automatic,
    "Keywords"->Automatic,
    "Package"->Automatic,
    "Description"->Automatic,
    "Examples"->Automatic,
    "Notes"->Automatic,
    "Owner"->Automatic
    };
BugsNotebookCell[tag_String, ops:OptionsPattern[]]:=
  Module[
    {
      title,
      desc,
      id,
      created,
      resolved,
      kw,
      ex,
      res,
      pack,
      notes,
      owner
      },
    title=
      Replace[OptionValue["Title"],
        {
          Except[_String?(StringLength[#]>0&)]->"<<Title>>"
          }
        ];
    pack=
      Replace[OptionValue["Package"],
        {
          Except[_String?(StringLength[#]>0&)]->"<<Package>>"
          }
        ];
    kw=
      Replace[OptionValue["Keywords"],
        {
          s_String?(StringLength[#]>0&):>
            StringTrim@StringSplit[s, ","],
          Except[{__String}]->{"keyword1", "keyword2"}
          }
        ];
    id=
      Replace[OptionValue["ID"],
        {
          i_Integer:>ToString[i],
          Except[_String]->""
          }
        ];
    owner=
      Replace[OptionValue["Owner"],
        {
          Except[_String]->""
          }
        ];
    created=
      Replace[OptionValue["CreationDate"], 
        {
          d_DateObject:>DateString[d],
          Except[_String?(StringLength[#]>0&)]->DateString[],
          s_String:>
            Replace[Quiet@DateObject[s], 
              {
                d_DateObject:>DateString[d],
                _->s
                }
              ]
          }
        ];
    resolved=
      Replace[OptionValue["ResolutionDate"], 
        {
          d_DateObject:>DateString[d],
          Except[_String?(StringLength[#]>0&)]->"",
          s_String:>
            Replace[Quiet@DateObject[s], 
              {
                d_DateObject:>DateString[d],
                _->s
                }
              ]
          }
        ];
    desc=
      Replace[OptionValue["Description"],
        {
          Except[_String?(StringLength[#]>0&)]->"<<Description>>"
          }
        ];
    ex=
      Replace[OptionValue["Examples"],
        Except[_List]:>{"<<Example>>"}
        ];
    notes=
      Replace[OptionValue["Notes"],
        Except[_List]:>{"<<Note>>"}
        ];
    Cell[
      CellGroupData@
        {
          bugTitleCell[title, resolved, tag],
          Cell[created, "Text", "BugAnnotation", "BugTimestamp", "BugCreated",
            CellTags->{"Bug", tag, "CreationDate"}
            ],
          Cell[resolved, "Text", "BugAnnotation", "BugTimestamp", "BugResolved",
            CellTags->{"Bug", tag, "ResolutionDate"}
            ],
          Cell[id, "Text", "BugAnnotation", "BugID", 
            CellTags->{"Bug", tag, "ID"}
            ],
          Cell[
            pack, "Text", "BugAnnotation", "BugPackage",
            CellTags->{"Bug", tag, "Package"}
            ],
          Cell[
            owner, "Text", "BugAnnotation", "BugOwner", 
            CellTags->{"Bug", tag, "Owner"}
            ],
          Cell[
            TextData@Riffle[kw, ", "], "Text", "BugAnnotation", "BugKeywords", 
            CellTags->{"Bug", tag, "Keywords"}
            ],
          Cell["Description", "Subsection"],
          Cell[desc, "Text", "BugDescription",
            CellTags->{"Bug", tag, "Description"}
            ],
          Cell[
            CellGroupData@Flatten@{
              Cell["Examples", "Subsection", "BugExamples",
                CellTags->{"Bug", tag, "Examples"}
                ],
              Replace[
                ex,
                {
                  s_String:>
                    Cell[s, "Text"],
                  e:Except[_String]:>
                    Cell[BoxData@ToBoxes[e], "Output"]
                  },
                1
                ]
              }
            ],
          Cell[
            CellGroupData@Flatten@{
              Cell["Notes", "Subsection", "BugNotes",
                CellTags->{"Bug", tag, "Notes"}
                ],
              Replace[
                notes,
                {
                  s_String:>
                    Cell[s, "Text"],
                  e:Except[_String]:>
                    Cell[BoxData@ToBoxes[e], "Output"]
                  },
                1
                ]
              }
            ]
          }
        ]
      ]


(* ::Subsubsection::Closed:: *)
(*BugsNotebookAdd*)



Options[BugsNotebookAdd]=
  Options[BugsNotebookCell];
BugsNotebookAdd[nb_NotebookObject, tag_String, ops:OptionsPattern[]]:=
  (
    SelectionMove[nb, After, Notebook];
    NotebookWrite[nb,
      BugsNotebookCell[tag,
        ops,
        "ID"->
          1+Length@
            Cells[nb, CellTags->"Bug", CellStyle->"BugTitle"]
        ]
      ]
    );


(* ::Subsubsection::Closed:: *)
(*BugsNotebookLocate*)



(* ::Subsubsubsection::Closed:: *)
(*getCellsWithTag*)



getCellsWithTag[nb_, tag_]:=
  Module[{cells=Cells[nb, CellTags->{tag}]},
    Pick[
      cells,
      #=={"Bug", tag, "Title"}&/@
        CurrentValue[cells, CellTags]
      ]
    ];


(* ::Subsubsubsection::Closed:: *)
(*getCellsWithTitle*)



getCellsWithTitle[nb_, tag_]:=
  Module[{cells=Cells[nb, CellTags->"Title"]},
    Pick[
      cells,
      MemberQ[{#[[1]]}, _String?(StringContainsQ[tag]), Infinity]&/@
        Echo@NotebookRead@cells
      ]
    ];


(* ::Subsubsubsection::Closed:: *)
(*processFoundCells*)



processFoundCells[cells_, highlight_, return_]:=
  Replace[
    cells,
    {
      {c_, ___}:>
        (
          If[TrueQ@highlight,
            SelectionMove[c, All, CellGroup]
            ];
          If[TrueQ@return,
            c
            ]
          ),
      _->$Failed
      }
    ]


(* ::Subsubsubsection::Closed:: *)
(*Main*)



BugsNotebookLocate//Clear
Options[BugsNotebookLocate]=
  {
    "ReturnCellObject"->False,
    "HighlightGroup"->True,
    "SearchTitles"->False
    };
BugsNotebookLocate[nb_NotebookObject, tag_, ops:OptionsPattern[]]:=
  Module[
    {
      found
      },
    found=
      processFoundCells[getCellsWithTag[nb, tag], 
        OptionValue["HighlightGroup"], OptionValue["ReturnCellObject"]];
    If[found===$Failed&&TrueQ@OptionValue["SearchTitles"],
      getCellsWithTitle[nb, tag],
      found
      ]
    ]


(* ::Subsection:: *)
(*Processing*)



(* ::Subsubsection::Closed:: *)
(*BugsCellToBug*)



(* ::Subsubsubsection::Closed:: *)
(*bugsCellParseTitle*)



bugsCellParseTitle[t_]:=
  Replace[t,
    {TextData[s___]:>Flatten[{s}][[1]]}
    ]


getBugsCellTitle[c_, tag_]:=
  FirstCase[c, 
    Cell[t_, ___, CellTags->{"Bug", tag, "Title"}, ___]:>
      Replace[bugsCellParseTitle[t],
        e:Except[_String]:>
          FirstCase[e, 
            TagBox[tit_, "BugTitle", ___]|
              Cell[tit_, ___, "BugTitle", ___]:>
              StringJoin@
                Flatten@{ReplaceRepeated[tit, {RowBox[r_]:>r}]},
            None, 
            Infinity
            ]
        ],
    None,
    Infinity
    ]


(* ::Subsubsubsection::Closed:: *)
(*bugsCellParseID*)



bugsCellParseID[t_]:=
  Replace[Floor@Internal`StringToDouble@t,
    Except[_Integer]->t
    ]


(* ::Subsubsubsection::Closed:: *)
(*bugsCellParsePackage*)



bugsCellParsePackage[p_]:=p


(* ::Subsubsubsection::Closed:: *)
(*bugsCellParseTimestamp*)



bugsCellParseTimestamp//Clear
bugsCellParseTimestamp[d_String?(StringLength[#]>0&)]:=
  Replace[Quiet@DateObject[d], Except[_DateObject]->d];
bugsCellParseTimestamp[d_DateObject?(DateObjectQ)]:=
  d;
bugsCellParseTimestamp[e_]:=e


(* ::Subsubsubsection::Closed:: *)
(*bugsCellParseKeywords*)



bugsCellParseKeywords[kw_]:=
  StringTrim@StringSplit[kw, ","]


(* ::Subsubsubsection::Closed:: *)
(*bugsCellParseDescription*)



bugsCellParseDescription[e_]:=e;


(* ::Subsubsubsection::Closed:: *)
(*bugsCellParseExamples*)



bugsCellParseExamples[e_]:=
  Replace[NotebookTools`FlattenCellGroups[e],
    {
      Cell[c_, "Text", ___]:>c,
      Cell[BoxData[b_], ___]:>ToExpression[b, StandardForm, Hold]
      },
    1
    ]


(* ::Subsubsubsection::Closed:: *)
(*bugsCellParseNotes*)



bugsCellParseNotes[e_]:=
  StringTrim@
    Map[
      FE`makePlainText,
      NotebookTools`FlattenCellGroups[e]
      ]


(* ::Subsubsubsection::Closed:: *)
(*BugsCellToBug*)



BugsCellToBug[c_Cell, ops:OptionsPattern[]]:=
  With[{tag=FirstCase[c, (CellTags->{"Bug", t_, _}):>t, None, Infinity]},
    BugObject@
      <|
        "Tag"->tag,
        "ID"->
          FirstCase[c, 
            Cell[t_, ___, CellTags->{"Bug", tag, "ID"}, ___]:>
              bugsCellParseID[t],
            None,
            Infinity
            ],
        "Title"->
          getBugsCellTitle[c, tag],(*
				"Resolved"->
					FirstCase[c, 
						Cell[___, TaggingRules\[Rule]{___, "Bugs"\[Rule]tr_, ___}, ___]:>
							Lookup[
								Lookup[tr, tag, <||>],
								"Resolved",
								False
								],
						False,
						Infinity
						],*)
        "CreationDate"->
          FirstCase[c, 
            Cell[ts_, ___, CellTags->{"Bug", tag, "CreationDate"}, ___]:>
              bugsCellParseTimestamp[ts],
            None,
            Infinity
            ],
        "ResolutionDate"->
          FirstCase[c, 
            Cell[ts_, ___, CellTags->{"Bug", tag, "ResolutionDate"}, ___]:>
              bugsCellParseTimestamp[ts],
            None,
            Infinity
            ],
        "Package"->
          FirstCase[c, 
            Cell[p_, ___, CellTags->{"Bug", tag, "Package"}, ___]:>
              bugsCellParsePackage@p,
            None,
            Infinity
            ],
        "Keywords"->
            FirstCase[c, 
              Cell[kw_, ___, CellTags->{"Bug", tag, "Keywords"}, ___]:>
                bugsCellParseKeywords@kw,
              None,
              Infinity
              ],
        "Description"->
          FirstCase[c, 
            Cell[d_, ___, CellTags->{"Bug", tag, "Description"}, ___]:>
              bugsCellParseDescription@d,
            None,
            Infinity
            ],
        "Examples"->
          FirstCase[c, 
            Cell[
              CellGroupData[
                {
                  Cell[__, CellTags->{"Bug", tag, "Examples"}, ___],
                  e__
                  },
                ___
                ],
              ___
              ]:>
              bugsCellParseExamples@{e},
            None,
            Infinity
            ],
        "Notes"->
          FirstCase[c, 
            Cell[
              CellGroupData[
                {
                  Cell[__, CellTags->{"Bug", tag, "Notes"}, ___],
                  e__
                  },
                ___
                ],
              ___
              ]:>
              bugsCellParseNotes@{e},
            None,
            Infinity
            ]
        |>
    ]


(* ::Subsubsection::Closed:: *)
(*BugToCell*)



BugToCell[b_BugObject]:=
  BugsNotebookCell[b["Tag"], Sequence@@Normal@KeyDrop[Normal@b, "Tag"]];


(* ::Subsubsection::Closed:: *)
(*BugsNotebookToBugs*)



BugsNotebookToBugs[nb_Notebook]:=
  BugsCellToBug/@
    Cases[nb, 
      Cell[CellGroupData[{Cell[__, "BugTitle", ___], ___}, ___], ___],
      Infinity
      ];
BugsNotebookToBugs[nb_NotebookObject]:=
  Replace[NotebookRead[nb],
    {
      c:Cell[CellGroupData[{Cell[__, "BugTitle", ___], ___}, ___], ___]:>
        BugsCellToBug/@{c},
      c:{Cell[CellGroupData[{Cell[__, "BugTitle", ___], ___}, ___], ___]..}:>
        BugsCellToBug/@{c},
      _:>
        BugsNotebookToBugs@NotebookGet[nb]
      }
    ]


(* ::Subsubsection::Closed:: *)
(*BugsToNotebook*)



Options[BugsToNotebook]=Options[Notebook];
BugsToNotebook[b:{___BugObject}, ops:OptionsPattern[]]:=
  BugsNotebook[
    BugToCell/@b,
    ops
    ];


(* ::Subsubsection::Closed:: *)
(*BugsNotebookToMarkdown*)



BugsNotebookToMarkdown[
  b:{___BugObject}, 
  ops:OptionsPattern[]
  ]:=
  Module[{bnb=BugsToNotebook[b], nb1},
    bnb=
      DeleteCases[bnb, 
        Cell[__, "BugSearchBar"|"BugsNotebookButtonBar"|"BugsNotebookHeader", ___], 
        Infinity
        ];
    Internal`WithLocalSettings[
      nb1=CreateDocument[BugsNotebook[{}], Visible->False],
      bnb=
        ReplaceAll[
          bnb,
          {
            BoxData@GridBox[
              {{ItemBox[Cell[e_, ___, "BugTitle", ___], ___], ___}}, ___]:>
              e,
            Cell[e_, ___, "BugAnnotation", style_, ___]:>
              First@FrontEndExecute@
                ExportPacket[
                  Which[
                    Head@e===BoxData,
                      Cell[
                        BoxData@RowBox@Flatten@{
                          Replace[
                              None:>
                                ToLowerCase[StringTrim[style, "Bug"]]<>":"
                              ]@
                            CurrentValue[nb1, 
                              {StyleDefinitions, style, CellDingbat}
                              ],
                          " ",
                          First@e
                          }
                        ],
                    Head@e===TextData,
                      Cell@
                        TextData[Flatten@
                          {
                            Cell[
                              BoxData@
                                Replace[
                                  None:>
                                    ToLowerCase[StringTrim[style, "Bug"]]<>":"
                                  ]@
                                CurrentValue[nb1, 
                                  {StyleDefinitions, style, CellDingbat}
                                  ]
                              ],
                            " ",
                            First@e
                            }
                          ],
                    True,
                      Cell@
                        TextData[Flatten@
                          {
                            Cell[
                              BoxData@
                                Replace[
                                  None:>
                                    ToLowerCase[StringTrim[style, "Bug"]]<>":"
                                  ]@
                                CurrentValue[nb1, 
                                  {StyleDefinitions, style, CellDingbat}
                                  ]
                              ],
                            " ",
                            e
                            }
                          ]
                    ],
                  "PlainText"
                  ]
            }
          ],
      NotebookClose[nb1]
      ];
    PackageLoadPacletDependency["BTools`"];
    Internal`WithLocalSettings[
      bnb=CreateDocument[bnb, Visible->False],
      BTools`Web`NotebookToMarkdown[bnb, ops],
      NotebookClose@bnb
      ]
    ];
BugsNotebookToMarkdown[
  nb_NotebookObject, 
  ops:OptionsPattern[]
  ]:=
  BugsNotebookToMarkdown[
    BugsNotebookToBugs[nb],
    ops
    ]


(* ::Subsubsection::Closed:: *)
(*BugsNotebookMarkdownSave*)



BugsNotebookMarkdownSave[
  nb_NotebookObject, 
  ops:OptionsPattern[]
  ]:=
  (
    PackageLoadPacletDependency["BTools`"];
    BTools`Web`NotebookMarkdownSave[
      nb, 
      "ExportOptions"->
        {
          "ExportFunction"->BugsNotebookToMarkdown
          },
      ops
      ]
    )


End[];



