(* ::Package:: *)

(* Autogenerated Package *)

BuildBugIndex::usage=
  "Builds an index of bugs for the package";
BugsIndexSearch::usage=
  "Searches for a bug in the bug index";


Begin["`Private`"];


$bugIndexName=
  "BugIndex.wl";


(* ::Subsubsection::Closed:: *)
(*BuildBugIndex*)



BuildBugIndex[
  dir_String?DirectoryQ,
  bugNB_Notebook
  ]:=
  Export[
    FileNameJoin@{dir, $bugIndexName},
    BugsToDataset@bugNB
    ];
BuildBugIndex[
  dir:_String?DirectoryQ|Automatic:Automatic,
  bugNB_String?FileExistsQ
  ]:=
  Module[{nb=Get[bugNB]},
    If[MatchQ[nb, _Notebook],
      BuildBugIndex[
        If[dir===Automatic, DirectoryName@bugNB, dir],
        nb
        ],
      $Failed
      ]
    ];


(* ::Subsubsection::Closed:: *)
(*BugsIndexSearch*)



compileQuery[q_?OptionQ]:=
  KeyValueMap[With[{k=#, v=#2}, v@#[k]&]&, Association[q]];
compileQuery[f_Function]:=f;
compileQuery[s_Symbol]:=
  If[Length@DownValues[s]>0, s, $Failed];
compileQuery[e_]:=$Failed;


BugsIndexSearch[dir_, query_]:=
  Module[
    {
      compQ,
      bind=FindBugsNotebook[dir, $bugIndexName],
      index
      },
    If[bind=!=$Failed,
      compQ=compileQuery[query];
      If[compQ=!=$Failed,
        index=Get@bind;
        Select[index, compQ],
        $Failed
        ],
      $Failed
      ]
    ]


End[];



